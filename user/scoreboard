#!/bin/sh

### SCOREBOARD ###
cat /scoreboard/score.board > /scoreboard/score.board.bak

# Create a scoreboard file if it doesn't exist
if [ ! -f /scoreboard/score.board ]; then
    touch /scoreboard/score.board
fi

CLVL=1
FAIL=0

if [ -f ../result/1 ]; then
    grep -Fqx "[OK]" ../result/1
    if [ $? -eq 0 ]; then
        CLVL=2
    else
        FAIL=1
    fi
else
	FAIL=1
fi

if [ -f ../result/2 ]; then
    grep -Fqx "[OK]" ../result/2
    if [ $? -eq 0 ]; then
        CLVL=3
    else
        FAIL=1
    fi
elif [ $CLVL = 2 ]; then
	FAIL=1
fi

if [ -f ../result/3 ]; then
    grep -Fqx "[OK]" ../result/3
    if [ $? -eq 0 ]; then
        CLVL=4
    else
        FAIL=1
    fi
elif [ $CLVL = 3 ]; then
	FAIL=1
fi

subjectpdf="clear; cat en.subject$CLVL.pdf | /tte print"
challenge="sleep 0.1; vim challenge$CLVL.c +16"
# Prompt user from tmux to enter their name
if [ $FAIL -eq 0 ]; then
    tmux popup -t kodmaschine:0 -h 40% -w 40% -x 10% -y 10% 'figlet Exam challenger && echo "Login name: " && read name && echo $name > /scoreboard/new_entry && exit 0'
    tmux select-pane -t 2
    tmux send-keys -t kodmaschine "$subjectpdf" C-m
    tmux select-pane -t 3
    killall -9 vim 2>/dev/null
    tmux send-keys -t kodmaschine "$challenge" C-m
else
    tmux popup -t kodmaschine:0 -h 40% -w 40% -x 10% -y 10% "cat /result/$((CLVL-1)) | figlet -t -c; echo -e '\n\nPress ESC to close this window.' && exit 0"
fi

# Wait for user to enter their name
while [ ! -s /scoreboard/new_entry ]; do
    sleep 0.5
done

# Read the user's name
name=$(cat /scoreboard/new_entry)

# Get current user time
time=$(cat /scoreboard/current_user_time)

# Add user to scoreboard
echo "$CLVL $time $name" >> /scoreboard/score.board

# Sort scoreboard
sort -k2 -n /scoreboard/score.board | tee /scoreboard/score.board
